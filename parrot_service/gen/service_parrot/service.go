// Code generated by goa v3.0.6, DO NOT EDIT.
//
// service-parrot service
//
// Command:
// $ goa gen parrot_service/design

package serviceparrot

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// The Parrot service serves a parrot payload
type Service interface {
	// Postparrot implements postparrot.
	Postparrot(context.Context, *Parrotpayload) (err error)
	// Listaparrot implements listaparrot.
	Listaparrot(context.Context, *ListaparrotPayload) (err error)
	// Listallparrots implements listallparrots.
	Listallparrots(context.Context) (err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "service-parrot"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [3]string{"postparrot", "listaparrot", "listallparrots"}

// Parrotpayload is the payload type of the service-parrot service postparrot
// method.
type Parrotpayload struct {
	// ID for the parrot
	ID string
	// the name of the parrot
	Name string
	// the colour of the parrot
	Colour string
	// the special trick of the parrot
	SpecialTrick string
}

// ListaparrotPayload is the payload type of the service-parrot service
// listaparrot method.
type ListaparrotPayload struct {
	// The ID of the Parrot
	ID string
}

// MakeNotFound builds a goa.ServiceError from an error.
func MakeNotFound(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "not_found",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}
