// Code generated by goa v3.0.6, DO NOT EDIT.
//
// service-parrot client
//
// Command:
// $ goa gen parrot_service/design

package serviceparrot

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "service-parrot" service client.
type Client struct {
	PostparrotEndpoint     goa.Endpoint
	ListaparrotEndpoint    goa.Endpoint
	ListallparrotsEndpoint goa.Endpoint
}

// NewClient initializes a "service-parrot" service client given the endpoints.
func NewClient(postparrot, listaparrot, listallparrots goa.Endpoint) *Client {
	return &Client{
		PostparrotEndpoint:     postparrot,
		ListaparrotEndpoint:    listaparrot,
		ListallparrotsEndpoint: listallparrots,
	}
}

// Postparrot calls the "postparrot" endpoint of the "service-parrot" service.
func (c *Client) Postparrot(ctx context.Context, p *Parrotpayload) (err error) {
	_, err = c.PostparrotEndpoint(ctx, p)
	return
}

// Listaparrot calls the "listaparrot" endpoint of the "service-parrot" service.
func (c *Client) Listaparrot(ctx context.Context, p *ListaparrotPayload) (err error) {
	_, err = c.ListaparrotEndpoint(ctx, p)
	return
}

// Listallparrots calls the "listallparrots" endpoint of the "service-parrot"
// service.
func (c *Client) Listallparrots(ctx context.Context) (err error) {
	_, err = c.ListallparrotsEndpoint(ctx, nil)
	return
}
