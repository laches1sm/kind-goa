// Code generated by goa v3.0.6, DO NOT EDIT.
//
// service-parrot HTTP server types
//
// Command:
// $ goa gen parrot_service/design

package server

import (
	serviceparrot "parrot_service/gen/service_parrot"
	"unicode/utf8"

	goa "goa.design/goa/v3/pkg"
)

// ListaparrotRequestBody is the type of the "service-parrot" service
// "listaparrot" endpoint HTTP request body.
type ListaparrotRequestBody struct {
	// The ID of the Parrot
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
}

// NewPostparrotParrotpayload builds a service-parrot service postparrot
// endpoint payload.
func NewPostparrotParrotpayload() *serviceparrot.Parrotpayload {
	return &serviceparrot.Parrotpayload{}
}

// NewListaparrotPayload builds a service-parrot service listaparrot endpoint
// payload.
func NewListaparrotPayload(body *ListaparrotRequestBody) *serviceparrot.ListaparrotPayload {
	v := &serviceparrot.ListaparrotPayload{
		ID: *body.ID,
	}
	return v
}

// ValidateListaparrotRequestBody runs the validations defined on
// ListaparrotRequestBody
func ValidateListaparrotRequestBody(body *ListaparrotRequestBody) (err error) {
	if body.ID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("id", "body"))
	}
	if body.ID != nil {
		if utf8.RuneCountInString(*body.ID) < 1 {
			err = goa.MergeErrors(err, goa.InvalidLengthError("body.id", *body.ID, utf8.RuneCountInString(*body.ID), 1, true))
		}
	}
	return
}
